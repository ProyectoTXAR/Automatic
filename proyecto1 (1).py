# -*- coding: utf-8 -*-
"""Proyecto1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19gbgRLSXMENZ65g8Hp5GDS0WbuUh91QE
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install selenium
# !pip install openpyxl

# Commented out IPython magic to ensure Python compatibility.
# %%shell
# 
# # Add debian buster
# cat > /etc/apt/sources.list.d/debian.list <<'EOF'
# deb [arch=amd64 signed-by=/usr/share/keyrings/debian-buster.gpg] http://deb.debian.org/debian buster main
# deb [arch=amd64 signed-by=/usr/share/keyrings/debian-buster-updates.gpg] http://deb.debian.org/debian buster-updates main
# deb [arch=amd64 signed-by=/usr/share/keyrings/debian-security-buster.gpg] http://deb.debian.org/debian-security buster/updates main
# EOF
# 
# # Add keys
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517
# 
# 
# apt-key export 77E11517 | gpg --batch --dearmour -o /usr/share/keyrings/debian-buster.gpg
# apt-key export 22F3D138 | gpg --batch --dearmour -o /usr/share/keyrings/debian-buster-updates.gpg
# apt-key export E562B32A | gpg --batch --dearmour -o /usr/share/keyrings/debian-security-buster.gpg
# 
# # Prefer debian repo for chromium* packages only
# # Note the double-blank lines between entries
# cat > /etc/apt/preferences.d/chromium.pref << 'EOF'
# Package: *
# Pin: release a=eoan
# Pin-Priority: 500
# 
# 
# Package: *
# Pin: origin "deb.debian.org"
# Pin-Priority: 300
# 
# 
# Package: chromium*
# Pin: origin "deb.debian.org"
# Pin-Priority: 700
# EOF
#

!apt-get update
!apt-get install chromium chromium-driver
!sudo apt --fix-broken install

from selenium import webdriver
from selenium.webdriver.support.select import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from google.colab import files
import time
import pandas as pd
import numpy as np
def web_driver():
    options = webdriver.ChromeOptions()
    options.add_argument("--verbose")
    options.add_argument('--no-sandbox')
    options.add_argument('--headless')
    options.add_argument('--disable-gpu')
    options.add_argument("--window-size=1920, 1200")
    options.add_argument('--disable-dev-shm-usage')
    driver = webdriver.Chrome(options=options)
    return driver

driver = web_driver()
driver.get('https://www.cafci.org.ar/consulta-de-fondos.html')

# Click en "Tipo de renta"
WebDriverWait(driver, 60)\
    .until(EC.element_to_be_clickable((By.XPATH,
                                      '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/table[1]/tbody[1]/tr[1]/td[3]/select[1]')))\
    .click()

# Click en mercado de dinero
WebDriverWait(driver, 60)\
    .until(EC.element_to_be_clickable((By.XPATH,
                                      '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/table[1]/tbody[1]/tr[1]/td[3]/select[1]/option[5]')))\
    .click()

# Click en buscar
WebDriverWait(driver, 60)\
    .until(EC.element_to_be_clickable((By.XPATH,
                                      '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/table[2]/tbody[1]/tr[2]/td[3]/div[1]/a[1]')))\
    .click()

# Click en buscar
WebDriverWait(driver, 60)\
    .until(EC.element_to_be_clickable((By.XPATH,
                                      '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/table[2]/tbody[1]/tr[2]/td[3]/div[1]/a[1]')))\
    .click()

# Click en buscar
WebDriverWait(driver, 60)\
    .until(EC.element_to_be_clickable((By.XPATH,
                                      '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/table[2]/tbody[1]/tr[2]/td[3]/div[1]/a[1]')))\
    .click()

lista_fondos2 = []
lista_data2 = []
lista_fecha2 = []
table = driver.find_element(By.ID, 'selectClase')
rows = table.find_elements(By.TAG_NAME, 'option')
cant = driver.find_element(By.XPATH, '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[2]/div[1]/div[2]/div[1]/div[3]/strong[1]/span[1]')
cant = cant.text
print(cant)

## Codigo FINAL

from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

lista_fondos2 = []
lista_data2 = []
lista_fecha2 = []

table = driver.find_element(By.ID, 'selectClase')
select = Select(table)

options = ["1810 Ahorro", "Adcap Acciones Globales - Clase E"]

for option in options:
  select.select_by_visible_text(option)
  lista_fondos2.append(option)

  ver_button = driver.find_element(By.CSS_SELECTOR, '#tabsFix > div.content > a')
  ver_button.click()

  # Esperar a que se cargue la página
  wait = WebDriverWait(driver, 60)
  data = wait.until(EC.presence_of_element_located((By.XPATH, '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[2]/div[1]/div[3]/div[3]/p[2]')))
  fecha = wait.until(EC.presence_of_element_located((By.XPATH, '/html[1]/body[1]/div[1]/div[2]/div[2]/div[2]/div[2]/div[1]/div[3]/div[3]/h3[1]')))

  # Obtener información de la página siguiente
  data = data.text
  print(data)
  lista_data2.append(data.replace('Valor por cada cuotaparte:',''))
  fecha = fecha.text
  print(fecha)
  lista_fecha2.append(fecha.replace('Valores al ',''))

  # Volver a la tabla original
  driver.back()

  # Encontrar la tabla original nuevamente
  table = driver.find_element(By.ID, 'selectClase')
  select = Select(table)

# Cerrar el driver
driver.quit()

print(lista_fondos2)
print(lista_data2)
print(lista_fecha2)

df = pd.DataFrame({'Fondo': lista_fondos2, 'Valor por cada cuotaparte': lista_data2, 'Fecha': lista_fecha2})
print(df)
df.to_excel('cuotapartes_usadas.xlsx', index=False)
files.download('cuotapartes_usadas.xlsx')











